{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 918
    },
    "colab_type": "code",
    "id": "guj41CZ9IqYJ",
    "outputId": "a3527c0f-4289-47e3-90bd-767b4c701ac7"
   },
   "outputs": [],
   "source": [
    "# !install pip\n",
    "# !pip install --upgrade pip\n",
    "# !pip install tensorflow==2.0.0b1\n",
    "# !pip install keras"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "aMZruxqFJMDa"
   },
   "source": [
    "## Set-up"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 34
    },
    "colab_type": "code",
    "id": "QnMrXgzEJiMw",
    "outputId": "980badb6-1816-4bc6-f5bc-9d2e605ff2cb"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2.0.0-alpha0\n"
     ]
    }
   ],
   "source": [
    "import tensorflow as tf\n",
    "print(tf.__version__)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {
    "colab": {},
    "colab_type": "code",
    "id": "mDYicnl_JllY"
   },
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "from tensorflow.python.keras.models import Sequential\n",
    "from tensorflow.python.keras.layers import Dense,LSTM,Dropout,Conv1D,Conv2D,Flatten\n",
    "# import matplotlib.pyplot as plt\n",
    "\n",
    "seed = 7\n",
    "np.random.seed(seed)\n",
    "\n",
    "def plot_series(time, series, format=\"-\", start=0, end=None):\n",
    "    plt.plot(time[start:end], series[start:end], format)\n",
    "    plt.xlabel(\"Time\")\n",
    "    plt.ylabel(\"Value\")\n",
    "    plt.grid(True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {
    "colab": {},
    "colab_type": "code",
    "id": "NbdaYiCxJmSf"
   },
   "outputs": [],
   "source": [
    "import tensorflow as tf\n",
    "import pandas as pd\n",
    "from pandas import Series,DataFrame\n",
    "\n",
    "import io\n",
    "from io import StringIO\n",
    "\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.metrics import mean_absolute_error,mean_squared_error\n",
    "from sklearn.metrics import f1_score, accuracy_score, recall_score, precision_score\n",
    "\n",
    "%matplotlib inline\n",
    "import matplotlib as mpl\n",
    "from matplotlib import pylab as plt\n",
    "import matplotlib.dates as mdates\n",
    "import seaborn as sns\n",
    "import matplotlib.ticker as ticker\n",
    "\n",
    "import collections\n",
    "\n",
    "from keras import backend as k\n",
    "# from tensorflow.python.framework import ops\n",
    "# ops.reset_default_graph()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "29IRk9evJ0yI"
   },
   "source": [
    "## Process Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 120
    },
    "colab_type": "code",
    "id": "LDh_9kiBUkaA",
    "outputId": "98410e48-2755-4a23-f703-bfe935a7afd7"
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 292
    },
    "colab_type": "code",
    "id": "rFT4kcstUKXO",
    "outputId": "90bb1a2f-4c2c-4af1-9e5c-34c121154187"
   },
   "outputs": [],
   "source": [
    "EastRiver = pd.read_csv('~/Data/dl_streamflow/raw_data_processed/lstm_df_soil.csv')\n",
    "EastRiver = EastRiver.iloc[:, 1:] # remove date col\n",
    "#EastRiver.iloc[:, 0] = EastRiver.iloc[:, 0]/20"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 431
    },
    "colab_type": "code",
    "id": "fQWpNMs_VHvC",
    "outputId": "9cc0d432-480a-459b-d4e6-1f96eb4df951"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 6253 entries, 0 to 6252\n",
      "Data columns (total 20 columns):\n",
      "Discharge              6253 non-null float64\n",
      "SWE_380                6253 non-null float64\n",
      "Pr_Acc_380             6253 non-null float64\n",
      "Temp_Max_380           6253 non-null float64\n",
      "Temp_Min_380           6253 non-null float64\n",
      "Temp_Ave_380           6253 non-null float64\n",
      "Pr_Inc_380             6253 non-null float64\n",
      "SWE_737                6253 non-null float64\n",
      "Pr_Acc_737             6253 non-null float64\n",
      "Temp_Max_737           6253 non-null float64\n",
      "Temp_Min_737           6253 non-null float64\n",
      "Temp_Ave_737           6253 non-null float64\n",
      "Pr_Inc_737             6253 non-null float64\n",
      "Temp_Max_380_soil      6253 non-null float64\n",
      "Temp_Min_380_soil      6253 non-null float64\n",
      "Pr_Inc_380_soil        6253 non-null float64\n",
      "Soil_Moi_-2in_380      6253 non-null float64\n",
      "Soil_Temp_-2in_380     6253 non-null float64\n",
      "Soil_Temp_-8in_380     6253 non-null float64\n",
      "Soil_Temp_-20in_380    6253 non-null float64\n",
      "dtypes: float64(20)\n",
      "memory usage: 977.1 KB\n"
     ]
    }
   ],
   "source": [
    "EastRiver.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "rEQ6PNMEVWI3"
   },
   "source": [
    "## Visualize data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 449
    },
    "colab_type": "code",
    "id": "9D7u0KIdVTjc",
    "outputId": "857e8d6f-d76b-495c-8588-3b65957671b8"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1a30cc1080>"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAABCAAAAGfCAYAAACOSKNiAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADl0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uIDIuMi4yLCBodHRwOi8vbWF0cGxvdGxpYi5vcmcvhp/UCwAAIABJREFUeJzs3Xl8FEXeP/BPzeTgkjMECLcSl8OEEVDuFSScIqcisrKgossij/5QV3lcD1BRFt3V3YdLxANRg7CuoIvIDStEOYQRUESCGwgB5UwEcs5M//6Y6U53z0wgZJKZrvm8Xy9fTHquKrunuvrb36oSiqKAiIiIiIiIiKgy2cJdACIiIiIiIiKSHwMQRERERERERFTpGIAgIiIiIiIiokrHAAQRERERERERVToGIIiIiIiIiIio0jEAQURERERERESVjgEIIiIiIiIiIqp0DEAQERERERERUaVjAIKIiIiIiIiIKl1MuAtwJRISEpRWrVqFuxhEREREREREZPLNN9+cURSl4eVeZ4kARKtWrbB79+5wF4OIiIiIiIiITIQQR6/kdRyCQURERERERESVjgEIIiIiIiIiIqp0DEAQERERERERUaVjAIKIiIiIiIiIKh0DEERERERERERU6RiAICIiIiIiIqJKxwAEEREREREREVU6BiCIiIiIiIiIqNIxAEFERERERERElY4BCCIiIiIiIiKqdAxAEBEREREREVGlYwCCiIiIiIiIiCodAxBEREREREREVOkYgCAiIiIiIiKiSscABBEREREREVElKXZ5UFDsDncxIgIDEERERERERESVZMS87Wj37BfhLkZEYACCiIgoCoyavx2zVn8f7mIQERFFne9P/hruIkQMBiCIiIiiwJ5juXjzy/+GuxhEREQUxRiAICIiIiIiIqJKxwAEEREREREREVU6BiCIiIiIiIiIqNIxAEFERERERERElY4BCCIiIiIiIiKqdAxAEBEREREREVGlYwCCiIiIiIiIiCodAxBEREREREREVOkYgCAiIiIiIiKiSscABBERERERERFVOgYgiIiIiIjKacdPZ6EoSriLQURkKQxAEBERkaX9a89x5OYXh7sYFEXWffcz7lr0Nd776mi4i0JEZCkMQBAREZFlHTl9EY8u/xb/7yNnuItCUeREbgEA7/FHRHSlmDXF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Lz2uNG+55Rb69etHQUEBN954I42NjQCUlpYydOhQzj//fPr168e7774b/82vfvUrunfvTq9evVi0aNGJb9gxkFEwRKuSGhBCCCGEEEKIo/XJJ5/w5ptvsnr1anw+H5WVlYcNEsydO/eIaWZkZFBSUgLA9OnTSU5OZurUqa2W5+PVrVs3lixZQnp6Om+88QaTJ0/m448/xjRNlixZclxpPvHEE6SmpgIwZcoUZs+ezdSpU3n44Ye5+eabue2221izZg3XX389W7ZsYc2aNbz66qts2LCBsrIyrrjiCjZt2oRhnJq6CVIDQrQqGYZTCCGEEEIIcbR27txJZmYmPp8PgMzMTDp06EBxcTHnn38+BQUF3HrrrYRCIQCKioo40RES582bx4UXXkhhYSF33HEHruti2zbp6en87Gc/o3///owcOZLly5czdOhQzjnnHN5++20gGgD5wQ9+wMiRI+nZsye/+tWvjnq9l1xyCenp6QAMHjyY8vJygPi6ARYtWsTll1/O9ddfT8+ePRk/fvxh02wOPriuSzAYjL8QVkpRV1cHQG1tLR06dABg4cKFjB07Fq/XS7du3ejcuTOrVq066m04UVIDQgghhBBCCCEE77zzDrt27WrVNNu1a8eVV155yPkjRozg4YcfJj8/n2HDhjF69GgGDRrEhAkTKC4uJj8/n/HjxzN79mzuueeeE87PunXreO2111i2bBmWZTFp0iRefPFFbrzxRmpraxkxYgSPPPIIV199NdOnT6e4uJjPP/+c22+/nauuugqAFStWsG7dOrxeLwMHDuT73/8+hYWFx5SPZ5555pB/l9WrV7Nhwways7MZPHgwn376KYMHDz5kWuPHj+fdd9+lb9++/PGPfwTg4YcfZsSIEfzhD38gEAhQXFwMwI4dOygqKor/Njc3lx07djBw4MBjyv/xkhoQolVJ/QchhBBCCCHE0UpOTmbVqlXMmTOHrKwsRo8ezdNPP01eXh75+flAtJ+Djz76qFXWt2jRIj777DMGDBhAYWEhH374IVu3bgUgISGB4cOHA1BQUEBRURGWZVFQUEBpaWk8jZEjR9KmTRuSkpK47rrrWLp06THnYf78+fzmN79pcf7gwYNp3749pmlSWFh4wLpb8txzz7Fz5066devGK6+8AsBf/vIXJk2aRHl5Oa+//jrjxo1Da43W+qDfn8pm9FIDQrQq6QNCCCGEEEKIs9PhaiqcTKZpUlRURFFREQUFBcybN++krUtrza233sovf/nLA6bbto3X641/Nwwj3izEMAxs247P+/Yzz6GegR5//HGeffZZAN5//32ys7MpKSnh9ttv57333qNNmzYt/q55vRD92+y/7kMxTZMbb7yRJ554gvHjx/PMM8+wePFiAIYMGUJdXR179+4lNzeXsrKy+O/Ky8vjzTNOBakBIVqVhB+EEEIIIYQQR2vTpk1s3rw5/r2kpIScnBxKS0vZsmULAPPnz2fo0KGtsr5hw4bx8ssvx0fPqKqq4uuvvz6mNN5//31qamoIBAIsXLiQSy65pMXlpkyZQklJCSUlJWRnZ1NaWsqoUaNYsGAB3bt3P+FtcV2Xr776CogGVt544w169eoFQOfOnePNLtavX4/rurRt25ZrrrmGF154gXA4zNatW9m+fTsXXHDBCeflaEkNCCGEEEIIIYQQp0VDQwN33XUXNTU1WJZF9+7dmTNnDmPHjuWGG27Atm0GDhzI5MmTW2V9BQUFPPjggwwbNgzXdfF4PDz11FPHVAtgyJAh3HTTTWzdupVx48Yddf8P06dPp7q6mttvvx2I1nQ43JCjR+I4DjfffDP19fUAFBYW8uSTTwLwhz/8gUmTJvHII49gGAZ//vOfAejXrx/XXXcdvXv3xrIsnnzyyVM2AgaAaqkNyJlmwIAB+kR7OhUnV6e/f0bE8rCsX1fOaZt+urMjhBBCCCGEOAobN26kd+/epzsbZ425c+eybt06HnvssdOdldOmpTKjlFqltR5wpN9KEwzRqqQLCCGEEEIIIYQQLZEmGEIIIYQQQgghzkpVVVVcfvnlB00vLi4mIyOj1dc3ceLEg6ZVVFQwYsSIg6YvXryY9PTWqR1+zTXXHNRXxaOPPsqwYcNaJf1TRQIQolUZUgVCCCGEEEIIcYpkZGRQUlJyWvPQPLrFyfT666+f1PRPFWmCIYQQQgghhBBCiJNOAhCiVUn9ByGEEEIIIYQQLZEAhGhVSppgCCGEEEIIIYRogQQgRKtSUgdCCCGEEEIIIUQLJAAhWkes5oOEH4QQQgghhBDHYsaMGfTp04e+fftSWFjI8uXLD7nsxIkT2bBhAwBdu3alsrLyoGWqqqooLCyksLCQdu3a0bFjx/j3cDh80rbjSPbu3cv3vvc9+vXrR58+fXjuuecAKCsrY/To0ceV5vDhwyksLKRPnz7ccccdOI4DwOrVqxk0aBCFhYUMHDiQlStXAqC15o477qB79+7069fvlHfgKaNgiFZlGBKCEEIIIYQQQhydTz75hDfffJPVq1fj8/morKw8bJBg7ty5R0xz/5Expk+fTnJyMlOnTm21PB+vJ554gsLCQt566y12795Nr169uOmmm+jUqRMvvfTScaX5t7/9jdTUVFzX5frrr+e1115j1KhRTJ06lV/96lcMHz6c119/nXvvvZdFixbxxhtvUFZWxpYtW1i6dCk/+clP+Pjjj1t5Sw9NAhCidWh9unMghBBCCCGEOAFffvlL6hs2tmqaKcm9yc+//5Dzd+7cSWZmJj6fD4DMzEwAiouLmTp1KrZtM3DgQGbPno3P56OoqIhHH32UAQMGHHee5s2bx6xZswiHw1x88cXMnDkT13XJzMzktttuo7i4mKysLB5++GF+/vOfU1ZWxsyZM7nqqquYO3cub731FvYEQWUAABPQSURBVIFAgNLSUsaNG8d99913VOtVSlFfXw9AQ0MDmZmZmKbJli1bGDVqFCUlJcydO5d3332X+vp6vvrqK0aNGsVvfvObQ6aZmpoKgOM4hEKheJ98Sinq6uoAqK2tpUOHDgAsXLiQ8ePHAzBkyBB27drFnj17yMrKOr4/5jGSJhiidUgTDCGEEEIIIcQxGjFiBGVlZeTn53PHHXfw4YcfEgwGmTBhAi+99BJr167Ftm1mz57dKutbt24dr732GsuWLaOkpATbtnnxxReB6IP6iBEjWL16NV6vl+nTp1NcXMwrr7zCAw88EE9jxYoVvPjii6xevZoFCxYcdTOGu+++m5KSEjp06EC/fv144oknWuzE//PPP+evf/0ra9as4fnnn+ebb745bLrDhg0jOzubzMxMfvCDHwDw+OOPc/fdd9OpUyemTZvGjBkzANixYwedOnWK/zY3N5cdO3YcVf5bg9SAEK1KRsEQQgghhBDi7HS4mgonS3JyMqtWrWLJkiV88MEHjB49mmnTppGXl0d+fj4At9xyC7NmzeKee+454fUtWrSIzz77LF6DoqmpKf5AnpCQwPDhwwEoKCggLS0Ny7IoKCigtLQ0nsbIkSNp06YNANdddx1Lly6lsLDwiOt+++23ufDCC/nwww/58ssvueKKK1i7du1Byw0bNoyUlBQA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\n",
      "text/plain": [
       "<Figure size 1296x504 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "EastRiver.plot(figsize=(18,7))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 392
    },
    "colab_type": "code",
    "id": "S4n7gshgV1J5",
    "outputId": "112a7216-4c15-4e75-ff57-4670ea18bc30"
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1332x396 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# create the plot space upon which to plot the data\n",
    "fig, ax= plt.subplots()\n",
    "\n",
    "# add the x-axis and the y-axis to the plot\n",
    "#ax.plot(EastRiver['Discharge'], \n",
    "ax.plot(EastRiver['Soil_Moi_-20in_380'], \n",
    "    color = 'green')\n",
    "\n",
    "# rotate tick labels\n",
    "plt.setp(ax.get_xticklabels(), rotation=45)\n",
    "\n",
    "# set title and labels for axes\n",
    "ax.set(xlabel=\"Date\",\n",
    "       ylabel=\"Discharge\",\n",
    "       title=\"EastRiver Discharge\");\n",
    "\n",
    "# set plot size\n",
    "fig.set_size_inches(18.5, 5.5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {
    "colab": {},
    "colab_type": "code",
    "id": "Gj9NZkjnY4o_"
   },
   "outputs": [],
   "source": [
    "def windowed_dataset(series, window_size, batch_size, shuffle_buffer):\n",
    "    series = tf.expand_dims(series, axis=-1)\n",
    "    ds = tf.data.Dataset.from_tensor_slices(series)\n",
    "    ds = ds.window(window_size + 1, shift=1, drop_remainder=True)\n",
    "    ds = ds.flat_map(lambda w: w.batch(window_size + 1))\n",
    "    ds = ds.shuffle(shuffle_buffer)\n",
    "    ds = ds.map(lambda w: (w[:-1], w[1:]))\n",
    "    return ds.batch(batch_size).prefetch(1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {
    "colab": {},
    "colab_type": "code",
    "id": "04kAOlCoY62H"
   },
   "outputs": [],
   "source": [
    "def model_forecast(model, series, window_size):\n",
    "    ds = tf.data.Dataset.from_tensor_slices(series)\n",
    "    ds = ds.window(window_size, shift=1, drop_remainder=True)\n",
    "    ds = ds.flat_map(lambda w: w.batch(window_size))\n",
    "    ds = ds.batch(32).prefetch(1)\n",
    "    forecast = model.predict(ds)\n",
    "    return forecast"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [],
   "source": [
    "def NS(o,s):\n",
    "    \"\"\"\n",
    "    Nash Sutcliffe efficiency coefficient\n",
    "    input:\n",
    "        s: simulated\n",
    "        o: observed\n",
    "    output:\n",
    "        ns: Nash Sutcliffe efficient coefficient\n",
    "    \"\"\"\n",
    "    eps = 1e-5\n",
    "#    return 1 - sum((np.log(s+eps)-np.log(o+eps))**2)/sum((np.log(o+eps)-np.mean(np.log(o+eps)))**2) \n",
    "    return 1 - np.sum((s-o)**2)/np.sum((o-np.mean(o))**2)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "LmVYHV2tgrDt"
   },
   "source": [
    "### LSTM - Treat as a multivariate problem"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "PauwCrLcXqBH"
   },
   "source": [
    "#### model build-up without considering lagging and previous label data (discharge)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [],
   "source": [
    "#EastRiver = EastRiver.drop(columns=['Pr_Acc_380', 'Pr_Acc_737'])\n",
    "#EastRiver = EastRiver.drop(columns=['Temp_Min_380', 'Temp_Min_737', 'Temp_Max_380', 'Temp_Max_737'])\n",
    "EastRiver = EastRiver.drop(columns=['Soil_Moi_-2in_380'])\n",
    "#EastRiver = EastRiver.drop(columns=['Soil_Temp_-8in_380','Soil_Temp_-20in_380','Temp_Max_380_soil','Temp_Min_380_soil'])\n",
    "#EastRiver = EastRiver.drop(columns=['Pr_Inc_380_soil','Soil_Temp_-2in_380'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 6253 entries, 0 to 6252\n",
      "Data columns (total 19 columns):\n",
      "Discharge              6253 non-null float64\n",
      "SWE_380                6253 non-null float64\n",
      "Pr_Acc_380             6253 non-null float64\n",
      "Temp_Max_380           6253 non-null float64\n",
      "Temp_Min_380           6253 non-null float64\n",
      "Temp_Ave_380           6253 non-null float64\n",
      "Pr_Inc_380             6253 non-null float64\n",
      "SWE_737                6253 non-null float64\n",
      "Pr_Acc_737             6253 non-null float64\n",
      "Temp_Max_737           6253 non-null float64\n",
      "Temp_Min_737           6253 non-null float64\n",
      "Temp_Ave_737           6253 non-null float64\n",
      "Pr_Inc_737             6253 non-null float64\n",
      "Temp_Max_380_soil      6253 non-null float64\n",
      "Temp_Min_380_soil      6253 non-null float64\n",
      "Pr_Inc_380_soil        6253 non-null float64\n",
      "Soil_Temp_-2in_380     6253 non-null float64\n",
      "Soil_Temp_-8in_380     6253 non-null float64\n",
      "Soil_Temp_-20in_380    6253 non-null float64\n",
      "dtypes: float64(19)\n",
      "memory usage: 928.3 KB\n"
     ]
    }
   ],
   "source": [
    "EastRiver.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 241
    },
    "colab_type": "code",
    "id": "XPI95rEuXYSm",
    "outputId": "937d1959-cb38-4416-bc9b-6a778cf9b800"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[117.59375   ,   0.        ,  14.6       , ...,  68.        ,\n",
       "         62.        ,  60.        ],\n",
       "       [117.72916667,   0.        ,  14.6       , ...,  68.        ,\n",
       "         64.        ,  60.        ],\n",
       "       [110.45833333,   0.        ,  14.7       , ...,  70.        ,\n",
       "         66.        ,  61.        ],\n",
       "       ...,\n",
       "       [177.27083333,   0.        ,  26.5       , ...,  58.        ,\n",
       "         56.        ,  53.        ],\n",
       "       [167.92708333,   0.        ,  26.5       , ...,  56.        ,\n",
       "         55.        ,  52.        ],\n",
       "       [165.59375   ,   0.        ,  26.5       , ...,  52.        ,\n",
       "         55.        ,  52.        ]])"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "values = EastRiver.values\n",
    "\n",
    "# ensure all data is float\n",
    "values = values.astype('float64')\n",
    "values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 34
    },
    "colab_type": "code",
    "id": "4SK5fKmLXwh8",
    "outputId": "f9bc1c1d-f492-454f-eb22-c0d6c52e21dd"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(5000, 18) (1253, 18) (5000,) (1253,)\n"
     ]
    }
   ],
   "source": [
    "split_time = 5000\n",
    "# 4745\n",
    "\n",
    "# use discharge as label and other columns as features\n",
    "X = values[:,1:]\n",
    "y = values[:,0]\n",
    "\n",
    "x_train = X[:split_time,:]\n",
    "x_test = X[split_time:,:]\n",
    "y_train = y[:split_time]\n",
    "y_test = y[split_time:]\n",
    "\n",
    "print (x_train.shape,x_test.shape,y_train.shape,y_test.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 34
    },
    "colab_type": "code",
    "id": "4rDXAiwDZXw_",
    "outputId": "a6f89c6c-4fa3-4834-b2b4-ea9d5308bd17"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(5000, 1, 18) (1253, 1, 18)\n"
     ]
    }
   ],
   "source": [
    "# reshape data to fit for lstm\n",
    "# dimensions = (sample#, timeSteps, features)\n",
    "\n",
    "timeSteps = 1\n",
    "features = x_train.shape[1] # here's 18\n",
    "\n",
    "x_train = x_train.reshape(x_train.shape[0], timeSteps, features)\n",
    "x_test = x_test.reshape(x_test.shape[0], timeSteps, features)\n",
    "\n",
    "print (x_train.shape,x_test.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "5000"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(x_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1000"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "validation_perc = 0.2\n",
    "val_split = round(len(x_train)*validation_perc)\n",
    "val_split"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(4000, 1, 18) (4000,) (1000, 1, 18) (1000,)\n"
     ]
    }
   ],
   "source": [
    "trainX = x_train[:-val_split,:,:]\n",
    "trainY = y_train[:-val_split]\n",
    "validationX = x_train[-val_split:,:,:]\n",
    "validationY = y_train[-val_split:]\n",
    "print (trainX.shape, trainY.shape, validationX.shape, validationY.shape)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "SINGLE LSTM"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [],
   "source": [
    "model = Sequential()\n",
    "model.add(LSTM(100,input_shape = (timeSteps,trainX.shape[2]))) # define the LSTM with 50 neurons in the first hidden layer \n",
    "model.add(Dense(15, activation=\"relu\"))\n",
    "model.add(Dense(1)) # 1 neuron in the output layer\n",
    "\n",
    "model.compile(loss = \"mse\", optimizer = \"adam\")\n",
    "\n",
    "#history =  model.fit(x_train,y_train, validation_data = (x_test,y_test), epochs = 150 , batch_size = 32, verbose = 0, shuffle = False)\n",
    "history =  model.fit(trainX, trainY, validation_data = (validationX,validationY), epochs = 150 , batch_size = 32, verbose = 0, shuffle = False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [],
   "source": [
    "train_time = list(range(0, split_time - val_split))\n",
    "train_pred = model.predict(trainX)\n",
    "train_true = trainY.reshape(len(trainY), 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [],
   "source": [
    "test_time = list(range(split_time - val_split, split_time))\n",
    "val_pred = model.predict(validationX)\n",
    "val_true = validationY.reshape(len(validationY), 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [],
   "source": [
    "tv_time = train_time + test_time\n",
    "tv_true = np.concatenate((train_true, val_true), axis=0)\n",
    "tv_pred = np.concatenate((train_pred, val_pred), axis=0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.collections.LineCollection at 0x1a376134e0>"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1296x432 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig = plt.figure(figsize=(18, 6))\n",
    "plot_series(tv_time, tv_true)\n",
    "plot_series(tv_time, tv_pred)\n",
    "plt.vlines(split_time - val_split, 0, 2, color='red')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "173.35916137960425\n",
      "103252.8413750613\n",
      "366.1441110808805\n",
      "204744.71148599687\n"
     ]
    }
   ],
   "source": [
    "print(mean_absolute_error(train_true, train_pred))\n",
    "print(mean_squared_error(train_true, train_pred))\n",
    "print(mean_absolute_error(val_true, val_pred))\n",
    "print(mean_squared_error(val_true, val_pred))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "NS: -0.2960992095494639\n"
     ]
    }
   ],
   "source": [
    "print('NS:', NS(val_true, val_pred))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "N60xx55EZwFc"
   },
   "source": [
    "optimizer == \"adam\" with one hidden layer"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "CONV1D, LSTD AND DROPOUT"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {
    "colab": {},
    "colab_type": "code",
    "id": "I9Tz4dSjZfGh"
   },
   "outputs": [],
   "source": [
    "model = Sequential()\n",
    "model.add(Conv1D(64, kernel_size=5, input_shape = (timeSteps,x_train.shape[2]), padding='same',))\n",
    "model.add(LSTM(100,input_shape = (timeSteps,trainX.shape[2]), return_sequences=True)) # define the LSTM with 50 neurons in the first hidden layer \n",
    "model.add(LSTM(100)) \n",
    "model.add(Dense(15, activation=\"relu\"))\n",
    "model.add(Dropout(0.5))\n",
    "model.add(Dense(1)) # 1 neuron in the output layer\n",
    "\n",
    "model.compile(loss = \"mse\", optimizer = \"adam\")\n",
    "\n",
    "#history =  model.fit(x_train,y_train, validation_data = (x_test,y_test), epochs = 150 , batch_size = 32, verbose = 0, shuffle = False)\n",
    "history =  model.fit(trainX, trainY, validation_data = (validationX,validationY), epochs = 150 , batch_size = 32, verbose = 0, shuffle = False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {
    "colab": {},
    "colab_type": "code",
    "id": "Fv6rJEzTZk5z"
   },
   "outputs": [],
   "source": [
    "#test_time = list(range(split_time, split_time + y_test.shape[0]))\n",
    "#y_pred = model.predict(x_test)\n",
    "#y_test = y_test.reshape(len(y_test), 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 392
    },
    "colab_type": "code",
    "id": "iNjZNO_XZqme",
    "outputId": "41de1078-6dfb-4aaf-99cc-ad2f25e957a0"
   },
   "outputs": [],
   "source": [
    "#plt.figure(figsize=(18, 6))\n",
    "#plot_series(test_time, y_test)\n",
    "#plot_series(test_time, y_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [],
   "source": [
    "train_time = list(range(0, split_time - val_split))\n",
    "train_pred = model.predict(trainX)\n",
    "train_true = trainY.reshape(len(trainY), 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [],
   "source": [
    "test_time = list(range(split_time - val_split, split_time))\n",
    "val_pred = model.predict(validationX)\n",
    "val_true = validationY.reshape(len(validationY), 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [],
   "source": [
    "tv_time = train_time + test_time\n",
    "tv_true = np.concatenate((train_true, val_true), axis=0)\n",
    "tv_pred = np.concatenate((train_pred, val_pred), axis=0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.collections.LineCollection at 0x1a372d8240>"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1296x432 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig = plt.figure(figsize=(18, 6))\n",
    "plot_series(tv_time, tv_true)\n",
    "plot_series(tv_time, tv_pred)\n",
    "plt.vlines(split_time - val_split, 0, 2, color='red')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(history.history['loss'], label='train')\n",
    "plt.plot(history.history['val_loss'], label='test')\n",
    "plt.legend()\n",
    "plt.yticks([])\n",
    "plt.xticks([])\n",
    "plt.title(\"loss during training\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 34
    },
    "colab_type": "code",
    "id": "ZsFiRyeMehGD",
    "outputId": "08a1ae9e-da4a-4c2e-9b31-3bdb3f24b00a"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "139.73515087554813\n",
      "89138.72842019463\n",
      "328.1725215228575\n",
      "251856.52252170333\n"
     ]
    }
   ],
   "source": [
    "print(mean_absolute_error(train_true, train_pred))\n",
    "print(mean_squared_error(train_true, train_pred))\n",
    "print(mean_absolute_error(val_true, val_pred))\n",
    "print(mean_squared_error(val_true, val_pred))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 34
    },
    "colab_type": "code",
    "id": "kGPfzZISe8i5",
    "outputId": "1c553ca5-195f-4e07-b4d4-78cb417f5771"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "NS: -0.5943319726848333\n"
     ]
    }
   ],
   "source": [
    "print('NS:', NS(val_true, val_pred))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "AcaT2IOzXs74"
   },
   "source": [
    "#### model build-up considering lagging and previous label data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 34
    },
    "colab_type": "code",
    "id": "bkqWgNfjXv5F",
    "outputId": "7001cc4f-1b21-4291-8f70-f31ddd0c431b"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(6253, 19)"
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "values = EastRiver.values\n",
    "values.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {
    "colab": {},
    "colab_type": "code",
    "id": "2MJqIxqDfYDo"
   },
   "outputs": [],
   "source": [
    "# ensure all data is float\n",
    "values = values.astype('float64')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {
    "colab": {},
    "colab_type": "code",
    "id": "nQCS5cyMfaN0"
   },
   "outputs": [],
   "source": [
    "#convert data to supervised form\n",
    "\n",
    "def to_supervised(data,dropNa = True,lag = timeSteps):\n",
    "    df = pd.DataFrame(data)\n",
    "    column = []\n",
    "    column.append(df)\n",
    "    for i in range(1,lag+1):\n",
    "        column.append(df.shift(-i))\n",
    "    df = pd.concat(column,axis=1)\n",
    "    \n",
    "    # drop rows with missing values\n",
    "    df.dropna(inplace = True)\n",
    "    \n",
    "    # specify columns for input and output pairs\n",
    "    features = data.shape[1]\n",
    "    df = df.values\n",
    "    supervised_data = df[:,:features*lag]\n",
    "    supervised_data = np.column_stack( [supervised_data, df[:,features*lag]])\n",
    "    \n",
    "    return supervised_data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "Aniv-VtWfeie"
   },
   "source": [
    "##### timeStep == 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 223
    },
    "colab_type": "code",
    "id": "U_LwZLF6fcfK",
    "outputId": "261e006e-ce31-45f1-9843-1d9d2b0f5d17"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>3</th>\n",
       "      <th>4</th>\n",
       "      <th>5</th>\n",
       "      <th>6</th>\n",
       "      <th>7</th>\n",
       "      <th>8</th>\n",
       "      <th>9</th>\n",
       "      <th>10</th>\n",
       "      <th>11</th>\n",
       "      <th>12</th>\n",
       "      <th>13</th>\n",
       "      <th>14</th>\n",
       "      <th>15</th>\n",
       "      <th>16</th>\n",
       "      <th>17</th>\n",
       "      <th>18</th>\n",
       "      <th>19</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>117.593750</td>\n",
       "      <td>0.0</td>\n",
       "      <td>14.6</td>\n",
       "      <td>71.516129</td>\n",
       "      <td>45.419355</td>\n",
       "      <td>55.709677</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>26.8</td>\n",
       "      <td>76.0</td>\n",
       "      <td>40.0</td>\n",
       "      <td>57.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>72.8125</td>\n",
       "      <td>47.7500</td>\n",
       "      <td>0.0</td>\n",
       "      <td>68.0</td>\n",
       "      <td>62.0</td>\n",
       "      <td>60.0</td>\n",
       "      <td>117.729167</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>117.729167</td>\n",
       "      <td>0.0</td>\n",
       "      <td>14.6</td>\n",
       "      <td>69.218750</td>\n",
       "      <td>45.718750</td>\n",
       "      <td>54.812500</td>\n",
       "      <td>0.1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>26.8</td>\n",
       "      <td>77.0</td>\n",
       "      <td>39.0</td>\n",
       "      <td>58.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>71.6875</td>\n",
       "      <td>47.7500</td>\n",
       "      <td>0.1</td>\n",
       "      <td>68.0</td>\n",
       "      <td>64.0</td>\n",
       "      <td>60.0</td>\n",
       "      <td>110.458333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>110.458333</td>\n",
       "      <td>0.0</td>\n",
       "      <td>14.7</td>\n",
       "      <td>71.531250</td>\n",
       "      <td>46.343750</td>\n",
       "      <td>56.312500</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>26.8</td>\n",
       "      <td>77.0</td>\n",
       "      <td>42.0</td>\n",
       "      <td>59.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>72.3125</td>\n",
       "      <td>48.5000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>70.0</td>\n",
       "      <td>66.0</td>\n",
       "      <td>61.0</td>\n",
       "      <td>108.125000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>108.125000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>14.7</td>\n",
       "      <td>70.093750</td>\n",
       "      <td>46.781250</td>\n",
       "      <td>56.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>26.8</td>\n",
       "      <td>73.0</td>\n",
       "      <td>44.0</td>\n",
       "      <td>57.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>73.3750</td>\n",
       "      <td>49.1875</td>\n",
       "      <td>0.0</td>\n",
       "      <td>68.0</td>\n",
       "      <td>66.0</td>\n",
       "      <td>62.0</td>\n",
       "      <td>100.333333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>100.333333</td>\n",
       "      <td>0.0</td>\n",
       "      <td>14.7</td>\n",
       "      <td>71.656250</td>\n",
       "      <td>46.156250</td>\n",
       "      <td>56.093750</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>26.8</td>\n",
       "      <td>77.0</td>\n",
       "      <td>42.0</td>\n",
       "      <td>56.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>72.8125</td>\n",
       "      <td>48.1250</td>\n",
       "      <td>0.0</td>\n",
       "      <td>68.0</td>\n",
       "      <td>65.0</td>\n",
       "      <td>62.0</td>\n",
       "      <td>89.479167</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           0    1     2          3          4          5    6    7     8   \\\n",
       "0  117.593750  0.0  14.6  71.516129  45.419355  55.709677  0.0  0.0  26.8   \n",
       "1  117.729167  0.0  14.6  69.218750  45.718750  54.812500  0.1  0.0  26.8   \n",
       "2  110.458333  0.0  14.7  71.531250  46.343750  56.312500  0.0  0.0  26.8   \n",
       "3  108.125000  0.0  14.7  70.093750  46.781250  56.000000  0.0  0.0  26.8   \n",
       "4  100.333333  0.0  14.7  71.656250  46.156250  56.093750  0.0  0.0  26.8   \n",
       "\n",
       "     9     10    11   12       13       14   15    16    17    18          19  \n",
       "0  76.0  40.0  57.0  0.0  72.8125  47.7500  0.0  68.0  62.0  60.0  117.729167  \n",
       "1  77.0  39.0  58.0  0.0  71.6875  47.7500  0.1  68.0  64.0  60.0  110.458333  \n",
       "2  77.0  42.0  59.0  0.0  72.3125  48.5000  0.0  70.0  66.0  61.0  108.125000  \n",
       "3  73.0  44.0  57.0  0.0  73.3750  49.1875  0.0  68.0  66.0  62.0  100.333333  \n",
       "4  77.0  42.0  56.0  0.0  72.8125  48.1250  0.0  68.0  65.0  62.0   89.479167  "
      ]
     },
     "execution_count": 55,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "timeSteps = 1\n",
    "\n",
    "supervised = to_supervised(values,lag=timeSteps) # use `scaled` instead of `values` if choose to scale the data\n",
    "pd.DataFrame(supervised).head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 34
    },
    "colab_type": "code",
    "id": "uR3o0Ye9fkEF",
    "outputId": "2258ba91-5b36-468d-d1e3-af54c30d65c0"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(6252, 19) (0, 19) (6252,) (0,)\n"
     ]
    }
   ],
   "source": [
    "# spiltting the data\n",
    "# training on first 80%'s data\n",
    "\n",
    "features = EastRiver.shape[1] # num of input features\n",
    "split_time = 7421\n",
    "\n",
    "X = supervised[:,:features*timeSteps] \n",
    "y = supervised[:,features*timeSteps] \n",
    "\n",
    "x_train = X[:split_time,:]\n",
    "x_test = X[split_time:,:]\n",
    "y_train = y[:split_time]\n",
    "y_test = y[split_time:]\n",
    "\n",
    "print (x_train.shape,x_test.shape,y_train.shape,y_test.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[117.59375   ,   0.        ,  14.6       , ...,  68.        ,\n",
       "         62.        ,  60.        ],\n",
       "       [117.72916667,   0.        ,  14.6       , ...,  68.        ,\n",
       "         64.        ,  60.        ],\n",
       "       [110.45833333,   0.        ,  14.7       , ...,  70.        ,\n",
       "         66.        ,  61.        ],\n",
       "       ...,\n",
       "       [185.45833333,   0.        ,  26.5       , ...,  59.        ,\n",
       "         57.        ,  52.        ],\n",
       "       [177.27083333,   0.        ,  26.5       , ...,  58.        ,\n",
       "         56.        ,  53.        ],\n",
       "       [167.92708333,   0.        ,  26.5       , ...,  56.        ,\n",
       "         55.        ,  52.        ]])"
      ]
     },
     "execution_count": 57,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([117.72916667, 110.45833333, 108.125     , ..., 177.27083333,\n",
       "       167.92708333, 165.59375   ])"
      ]
     },
     "execution_count": 58,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 34
    },
    "colab_type": "code",
    "id": "wUf4zntIf0VM",
    "outputId": "88bee1fd-003e-4ff7-876a-3ca75dcc7def"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(6252, 1, 19) (0, 1, 19)\n"
     ]
    }
   ],
   "source": [
    "#convert data to fit for lstm\n",
    "features = values.shape[1]\n",
    "\n",
    "x_train = x_train.reshape(x_train.shape[0], timeSteps, features)\n",
    "x_test = x_test.reshape(x_test.shape[0], timeSteps, features)\n",
    "\n",
    "print (x_train.shape,x_test.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1250"
      ]
     },
     "execution_count": 60,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "validation_perc = 0.2\n",
    "val_split = round(len(x_train)*validation_perc)\n",
    "val_split"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(5002, 1, 19) (5002,) (1250, 1, 19) (1250,)\n"
     ]
    }
   ],
   "source": [
    "trainX = x_train[:-val_split,:,:]\n",
    "trainY = y_train[:-val_split]\n",
    "validationX = x_train[-val_split:,:,:]\n",
    "validationY = y_train[-val_split:]\n",
    "print (trainX.shape, trainY.shape, validationX.shape, validationY.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "fol6hcnohRaP"
   },
   "source": [
    "optimizer == \"adam\" with one hidden layer"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {
    "colab": {},
    "colab_type": "code",
    "id": "V3GmRQsChTfr"
   },
   "outputs": [],
   "source": [
    "#define the model\n",
    "model = Sequential()\n",
    "model.add(Conv1D(64, kernel_size=5, input_shape = (timeSteps,x_train.shape[2]), padding='same',))\n",
    "model.add(LSTM(64,input_shape = (timeSteps,trainX.shape[2]), return_sequences=True)) # define the LSTM with 50 neurons in the first hidden layer \n",
    "model.add(LSTM(64)) \n",
    "model.add(Dense(15, activation=\"relu\"))\n",
    "model.add(Dropout(0.5))\n",
    "model.add(Dense(1)) # 1 neuron in the output layer\n",
    "\n",
    "model.compile(loss = \"mae\", optimizer = \"adam\")\n",
    "\n",
    "history =  model.fit(trainX,trainY, validation_data = (validationX,validationY), epochs = 150 , batch_size = 32, verbose = 0, shuffle = False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {
    "colab": {},
    "colab_type": "code",
    "id": "2TykDHFEhaB1"
   },
   "outputs": [],
   "source": [
    "train_time = list(range(0, split_time - val_split))\n",
    "train_pred = model.predict(trainX)\n",
    "train_true = trainY.reshape(len(trainY), 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {},
   "outputs": [],
   "source": [
    "val_time = list(range(split_time - val_split, split_time))\n",
    "val_pred = model.predict(validationX)\n",
    "val_true = validationY.reshape(len(validationY), 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {},
   "outputs": [],
   "source": [
    "tv_time = train_time + val_time\n",
    "tv_true = np.concatenate((train_true, val_true), axis=0)\n",
    "tv_pred = np.concatenate((train_pred, val_pred), axis=0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "ename": "ValueError",
     "evalue": "x and y must have same first dimension, but have shapes (7421,) and (6252, 1)",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-67-53289635a23e>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mfig\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfigure\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfigsize\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m18\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m6\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mplot_series\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtv_time\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtv_true\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m \u001b[0mplot_series\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtv_time\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtv_pred\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mvlines\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msplit_time\u001b[0m \u001b[0;34m-\u001b[0m \u001b[0mval_split\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m3500\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcolor\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'red'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m<ipython-input-16-133777b750dd>\u001b[0m in \u001b[0;36mplot_series\u001b[0;34m(time, series, format, start, end)\u001b[0m\n\u001b[1;32m     10\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     11\u001b[0m \u001b[0;32mdef\u001b[0m \u001b[0mplot_series\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtime\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mseries\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mformat\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"-\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mstart\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mend\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 12\u001b[0;31m     \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mplot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtime\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mstart\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0mend\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mseries\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mstart\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0mend\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mformat\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     13\u001b[0m     \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mxlabel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Time\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     14\u001b[0m     \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mylabel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Value\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/anaconda3/lib/python3.6/site-packages/matplotlib/pyplot.py\u001b[0m in \u001b[0;36mplot\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m   3356\u001b[0m                       mplDeprecation)\n\u001b[1;32m   3357\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3358\u001b[0;31m         \u001b[0mret\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0max\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mplot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3359\u001b[0m     \u001b[0;32mfinally\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3360\u001b[0m         \u001b[0max\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_hold\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mwashold\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/anaconda3/lib/python3.6/site-packages/matplotlib/__init__.py\u001b[0m in \u001b[0;36minner\u001b[0;34m(ax, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1853\u001b[0m                         \u001b[0;34m\"the Matplotlib list!)\"\u001b[0m \u001b[0;34m%\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mlabel_namer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__name__\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1854\u001b[0m                         RuntimeWarning, stacklevel=2)\n\u001b[0;32m-> 1855\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0max\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1856\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1857\u001b[0m         inner.__doc__ = _add_data_doc(inner.__doc__,\n",
      "\u001b[0;32m/anaconda3/lib/python3.6/site-packages/matplotlib/axes/_axes.py\u001b[0m in \u001b[0;36mplot\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1525\u001b[0m         \u001b[0mkwargs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcbook\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnormalize_kwargs\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0m_alias_map\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1526\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1527\u001b[0;31m         \u001b[0;32mfor\u001b[0m \u001b[0mline\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_get_lines\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1528\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0madd_line\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mline\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1529\u001b[0m             \u001b[0mlines\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mline\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/anaconda3/lib/python3.6/site-packages/matplotlib/axes/_base.py\u001b[0m in \u001b[0;36m_grab_next_args\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m    404\u001b[0m                 \u001b[0mthis\u001b[0m \u001b[0;34m+=\u001b[0m \u001b[0margs\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    405\u001b[0m                 \u001b[0margs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0margs\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 406\u001b[0;31m             \u001b[0;32mfor\u001b[0m \u001b[0mseg\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_plot_args\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mthis\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    407\u001b[0m                 \u001b[0;32myield\u001b[0m \u001b[0mseg\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    408\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/anaconda3/lib/python3.6/site-packages/matplotlib/axes/_base.py\u001b[0m in \u001b[0;36m_plot_args\u001b[0;34m(self, tup, kwargs)\u001b[0m\n\u001b[1;32m    381\u001b[0m             \u001b[0mx\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mindex_of\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtup\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m-\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    382\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 383\u001b[0;31m         \u001b[0mx\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_xy_from_xy\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    384\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    385\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcommand\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;34m'plot'\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/anaconda3/lib/python3.6/site-packages/matplotlib/axes/_base.py\u001b[0m in \u001b[0;36m_xy_from_xy\u001b[0;34m(self, x, y)\u001b[0m\n\u001b[1;32m    240\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mx\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshape\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m!=\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshape\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    241\u001b[0m             raise ValueError(\"x and y must have same first dimension, but \"\n\u001b[0;32m--> 242\u001b[0;31m                              \"have shapes {} and {}\".format(x.shape, y.shape))\n\u001b[0m\u001b[1;32m    243\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mx\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mndim\u001b[0m \u001b[0;34m>\u001b[0m \u001b[0;36m2\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mndim\u001b[0m \u001b[0;34m>\u001b[0m \u001b[0;36m2\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    244\u001b[0m             raise ValueError(\"x and y can be no greater than 2-D, but have \"\n",
      "\u001b[0;31mValueError\u001b[0m: x and y must have same first dimension, but have shapes (7421,) and (6252, 1)"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 1296x432 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig = plt.figure(figsize=(18, 6))\n",
    "plot_series(tv_time, tv_true)\n",
    "plot_series(tv_time, tv_pred)\n",
    "plt.vlines(split_time - val_split, 0, 3500, color='red')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "print(mean_absolute_error(train_true, train_pred))\n",
    "print(mean_squared_error(train_true, train_pred))\n",
    "print(mean_absolute_error(val_true, val_pred))\n",
    "print(mean_squared_error(val_true, val_pred))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "val_pred"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "print('NS:', NS(val_true, val_pred))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#train_pred = model.predict(trainX)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#plot_series(train_time, train_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#val_pred = model.predict(validationX)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#plot_series(val_time, val_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#test_pred = model.predict(x_test)\n",
    "#test_time = list(range(split_time, split_time+test_pred.shape[0]))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#plot_series(test_time, test_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#x_test_raw = x_test\n",
    "#test_pred = model.predict(x_test_raw)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#test_true = y_test.reshape(len(y_test), 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#fig = plt.figure(figsize=(18, 6))\n",
    "#plot_series(test_time, test_pred)\n",
    "#plot_series(test_time, test_true)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "step=14"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "x_test[:,:,4] = 0\n",
    "x_test.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "test_pred = np.zeros(x_test.shape[0])\n",
    "test_pred.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "x_test[0:step,0,4] = validationY[-step::]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "x_test[0:step,:,4]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "validationY[-step::]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "val_pred[-step::]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "for i in range(0,test_pred.shape[0],step):\n",
    "    test_pred[i:i+step]= np.reshape(model.predict(x_test[i:i+step,:,:]), (step,))\n",
    "    if i > test_pred.shape[0]-step:\n",
    "        x_test[i+step:i+2*step,0,4] = test_pred[i:i+step] "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "x_test[7:14,0,4]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "test_pred[0:7]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "test_pred[0:100]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "test_pred[test_pred<0] = 1.0"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "test_time = list(range(split_time, split_time+test_pred.shape[0]))\n",
    "test_true = y_test.reshape(len(y_test), 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "fig = plt.figure(figsize=(18, 6))\n",
    "plot_series(test_time, test_pred)\n",
    "plot_series(test_time, test_true)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "print(mean_absolute_error(test_true, test_pred))\n",
    "print(mean_squared_error(test_true, test_pred))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "print('NS:', NS(test_true, np.reshape(test_pred, (len(y_test), 1))))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 392
    },
    "colab_type": "code",
    "id": "9VJrAJcfhdGr",
    "outputId": "166eb433-bb73-411e-f7c4-3dfb9003b409"
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 34
    },
    "colab_type": "code",
    "id": "Sxb60DAFhe_u",
    "outputId": "5bf033de-142f-45d9-c5e7-25ebd7f007fd"
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 34
    },
    "colab_type": "code",
    "id": "GoHkCpcAhhF8",
    "outputId": "f290b406-fb2b-4f01-a6cf-c1fadb6d5312"
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "-ehRRFZAhzhI"
   },
   "source": [
    "##### timeStep == 2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "EastRiver.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 223
    },
    "colab_type": "code",
    "id": "k9DNQkhmh5pc",
    "outputId": "2bac5ee0-f0bb-42a8-cf21-527ff4091d49"
   },
   "outputs": [],
   "source": [
    "timeSteps = 2\n",
    "\n",
    "supervised = to_supervised(values,lag=timeSteps) # use `scaled` instead of `values` if choose to scale the data\n",
    "pd.DataFrame(supervised).head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 34
    },
    "colab_type": "code",
    "id": "LEDpQCHEiJrC",
    "outputId": "56ba1909-d16b-4ae8-e1d2-e52ebb7fbe55"
   },
   "outputs": [],
   "source": [
    "# spiltting the data\n",
    "# training on first 80%'s data\n",
    "\n",
    "features = DryCreek.shape[1] # num of input features\n",
    "split_time = 7421\n",
    "# 4745\n",
    "\n",
    "X = supervised[:,:features*timeSteps] # column 1-37\n",
    "y = supervised[:,features*timeSteps] # column 38\n",
    "\n",
    "x_train = X[:split_time,:]\n",
    "x_test = X[split_time:,:]\n",
    "y_train = y[:split_time]\n",
    "y_test = y[split_time:]\n",
    "\n",
    "print (x_train.shape,x_test.shape,y_train.shape,y_test.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 34
    },
    "colab_type": "code",
    "id": "HKSBI_m1iJrK",
    "outputId": "5ae30ca1-3572-4782-b0b2-f75486d0e6b1"
   },
   "outputs": [],
   "source": [
    "#convert data to fit for lstm\n",
    "features = values.shape[1]\n",
    "\n",
    "x_train = x_train.reshape(x_train.shape[0], timeSteps, features)\n",
    "x_test = x_test.reshape(x_test.shape[0], timeSteps, features)\n",
    "\n",
    "print (x_train.shape,x_test.shape)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "VwmRSVuCiJsD"
   },
   "source": [
    "optimizer == \"adam\" with one hidden layer"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {},
    "colab_type": "code",
    "id": "HWG4EaM3iJsE"
   },
   "outputs": [],
   "source": [
    "#define the model\n",
    "\n",
    "model = Sequential()\n",
    "model.add(LSTM(50,input_shape = (timeSteps,x_train.shape[2]))) # define the LSTM with 50 neurons in the first hidden layer \n",
    "model.add(Dense(15, activation=\"relu\"))\n",
    "model.add(Dense(1)) # 1 neuron in the output layer\n",
    "\n",
    "model.compile(loss = \"mae\", optimizer = \"adam\")\n",
    "\n",
    "history =  model.fit(x_train,y_train, validation_data = (x_test,y_test), epochs = 150 , batch_size = 32, verbose = 0, shuffle = False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {},
    "colab_type": "code",
    "id": "NVLAZv-uiJsH"
   },
   "outputs": [],
   "source": [
    "y_pred = model.predict(x_test)\n",
    "y_test = y_test.reshape(len(y_test), 1)\n",
    "test_time = list(range(split_time, split_time + y_test.shape[0]))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 392
    },
    "colab_type": "code",
    "id": "hskYXwvZiJsQ",
    "outputId": "08966af0-56db-458a-b75a-8c3016cc782f"
   },
   "outputs": [],
   "source": [
    "plt.figure(figsize=(18, 6))\n",
    "plot_series(test_time, y_test)\n",
    "plot_series(test_time, y_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 34
    },
    "colab_type": "code",
    "id": "fbdKECMhiJsW",
    "outputId": "3964aaba-4082-4525-b8d7-ba4e02e0949d"
   },
   "outputs": [],
   "source": [
    "mean_absolute_error(y_test, y_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 34
    },
    "colab_type": "code",
    "id": "PiOxpIqeiJsd",
    "outputId": "7418cafb-a774-4210-e0c8-cf61b5a99934"
   },
   "outputs": [],
   "source": [
    "mean_squared_error(y_pred,y_test)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "hZ8TppnZkVfk"
   },
   "source": [
    "##### timeStep == 5"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 252
    },
    "colab_type": "code",
    "id": "xcfypOQskeCR",
    "outputId": "40cdfbef-9d78-46f4-9ac3-14901c3bd213"
   },
   "outputs": [],
   "source": [
    "timeSteps = 5\n",
    "\n",
    "supervised = to_supervised(values,lag=timeSteps) # use `scaled` instead of `values` if choose to scale the data\n",
    "pd.DataFrame(supervised).head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 34
    },
    "colab_type": "code",
    "id": "6m4uzh4nM85X",
    "outputId": "1aae691c-4b16-41f5-a34f-ac64d399ba9e"
   },
   "outputs": [],
   "source": [
    "# spiltting the data\n",
    "# training on first 80% data\n",
    "\n",
    "features = DryCreek.shape[1] # num of input features\n",
    "split_time = 7421\n",
    "# 4745\n",
    "\n",
    "X = supervised[:,:features*timeSteps] # column 1-94\n",
    "y = supervised[:,features*timeSteps] # column 95\n",
    "\n",
    "x_train = X[:split_time,:]\n",
    "x_test = X[split_time:,:]\n",
    "y_train = y[:split_time]\n",
    "y_test = y[split_time:]\n",
    "\n",
    "print (x_train.shape,x_test.shape,y_train.shape,y_test.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 34
    },
    "colab_type": "code",
    "id": "5cXfBPldM8iX",
    "outputId": "2391e095-a224-4974-b67b-b499874f4206"
   },
   "outputs": [],
   "source": [
    "#convert data to fit for lstm\n",
    "features = values.shape[1]\n",
    "\n",
    "x_train = x_train.reshape(x_train.shape[0], timeSteps, features)\n",
    "x_test = x_test.reshape(x_test.shape[0], timeSteps, features)\n",
    "\n",
    "print (x_train.shape,x_test.shape)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "EGBqO0qdkeCd"
   },
   "source": [
    "optimizer == \"adam\" with no hidden layer"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {},
    "colab_type": "code",
    "id": "p8MzvRaQkeCf"
   },
   "outputs": [],
   "source": [
    "#define the model\n",
    "\n",
    "model = Sequential()\n",
    "model.add(LSTM(50,input_shape = (timeSteps,x_train.shape[2]))) # define the LSTM with 50 neurons in the first hidden layer \n",
    "model.add(Dense(1)) # 1 neuron in the output layer\n",
    "\n",
    "model.compile(loss = \"mae\", optimizer = \"adam\")\n",
    "\n",
    "history =  model.fit(x_train,y_train, validation_data = (x_test,y_test), epochs = 150 , batch_size = 32, verbose = 0, shuffle = False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {},
    "colab_type": "code",
    "id": "60f8YBcTkeCi"
   },
   "outputs": [],
   "source": [
    "y_pred = model.predict(x_test)\n",
    "y_test = y_test.reshape(len(y_test), 1)\n",
    "test_time = list(range(split_time, split_time + y_test.shape[0]))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 392
    },
    "colab_type": "code",
    "id": "koDTpj2WkeCn",
    "outputId": "c71cdcc1-91b7-4733-f0f8-14453e0b9768"
   },
   "outputs": [],
   "source": [
    "plt.figure(figsize=(18, 6))\n",
    "plot_series(test_time, y_test)\n",
    "plot_series(test_time, y_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 34
    },
    "colab_type": "code",
    "id": "PIGplfxnkeCu",
    "outputId": "db24d88f-d9ce-444e-c005-5d85c78af548"
   },
   "outputs": [],
   "source": [
    "mean_absolute_error(y_test, y_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 34
    },
    "colab_type": "code",
    "id": "i38RrzlCkeCz",
    "outputId": "f63fdbad-d560-4fdd-ef8a-dd54df5fe26a"
   },
   "outputs": [],
   "source": [
    "mean_squared_error(y_pred,y_test)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "t4L1mCP7vd3M"
   },
   "source": [
    "optimizer == \"sgd\" with no hidden layer"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {},
    "colab_type": "code",
    "id": "xq8f6zyevd3Q"
   },
   "outputs": [],
   "source": [
    "#define the model\n",
    "\n",
    "model = Sequential()\n",
    "model.add(LSTM(50,input_shape = (timeSteps,x_train.shape[2]))) # define the LSTM with 50 neurons in the first hidden layer \n",
    "model.add(Dense(1)) # 1 neuron in the output layer\n",
    "\n",
    "model.compile(loss = \"mae\", optimizer = \"sgd\")\n",
    "\n",
    "history =  model.fit(x_train,y_train, validation_data = (x_test,y_test), epochs = 150 , batch_size = 32, verbose = 0, shuffle = False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {},
    "colab_type": "code",
    "id": "jvJiltLnvd3T"
   },
   "outputs": [],
   "source": [
    "y_pred = model.predict(x_test)\n",
    "y_test = y_test.reshape(len(y_test), 1)\n",
    "test_time = list(range(split_time, split_time + y_test.shape[0]))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 392
    },
    "colab_type": "code",
    "id": "EdGGT1iVvd3X",
    "outputId": "6d807689-e7e2-4b0c-a66b-6963332d101c"
   },
   "outputs": [],
   "source": [
    "plt.figure(figsize=(18, 6))\n",
    "plot_series(test_time, y_test)\n",
    "plot_series(test_time, y_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 34
    },
    "colab_type": "code",
    "id": "iX7ehwiRvd3c",
    "outputId": "c01f03ce-9eeb-4a94-d9d0-53c93c806c2e"
   },
   "outputs": [],
   "source": [
    "mean_absolute_error(y_test, y_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 34
    },
    "colab_type": "code",
    "id": "igCIHz4mvd3g",
    "outputId": "02470c5a-72bc-43fa-868e-09f83e71dbe2"
   },
   "outputs": [],
   "source": [
    "mean_squared_error(y_test, y_pred)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "H7pufmL1vd3m"
   },
   "source": [
    "optimizer == \"adam\" with one hidden layer"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {},
    "colab_type": "code",
    "id": "IyFMmILhvd3o"
   },
   "outputs": [],
   "source": [
    "#define the model\n",
    "\n",
    "model = Sequential()\n",
    "model.add(LSTM(50,input_shape = (timeSteps,x_train.shape[2]))) # define the LSTM with 50 neurons in the first hidden layer \n",
    "model.add(Dense(15, activation=\"relu\"))\n",
    "model.add(Dense(1)) # 1 neuron in the output layer\n",
    "\n",
    "model.compile(loss = \"mae\", optimizer = \"adam\")\n",
    "\n",
    "history =  model.fit(x_train,y_train, validation_data = (x_test,y_test), epochs = 150 , batch_size = 32, verbose = 0, shuffle = False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {},
    "colab_type": "code",
    "id": "LWzS98Nivd3u"
   },
   "outputs": [],
   "source": [
    "y_pred = model.predict(x_test)\n",
    "y_test = y_test.reshape(len(y_test), 1)\n",
    "test_time = list(range(split_time, split_time + y_test.shape[0]))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 392
    },
    "colab_type": "code",
    "id": "59MMDWcbvd3y",
    "outputId": "8846cff8-7086-49c2-ee40-b2bd9b061bf4"
   },
   "outputs": [],
   "source": [
    "plt.figure(figsize=(18, 6))\n",
    "plot_series(test_time, y_test)\n",
    "plot_series(test_time, y_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 34
    },
    "colab_type": "code",
    "id": "zNGzlmPgvd34",
    "outputId": "0fcef33f-9c08-469b-bbc3-50d64ebdfb74"
   },
   "outputs": [],
   "source": [
    "mean_absolute_error(y_test, y_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 34
    },
    "colab_type": "code",
    "id": "hisoQr8Fvd3-",
    "outputId": "6754aa5d-6827-4f3a-ba7e-19fb20be69a1"
   },
   "outputs": [],
   "source": [
    "mean_squared_error(y_pred,y_test)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "92MxovgKNGC8"
   },
   "source": [
    "##### timeStep == 1, 7, 14, 28, 56, 84, 168, 365, 730"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 172
    },
    "colab_type": "code",
    "id": "HvbfobE2kDDX",
    "outputId": "16906947-fccd-4c70-c6e6-f6d2f26da53e"
   },
   "outputs": [],
   "source": [
    "for i in range(1, 731):\n",
    "  if i == 1 or i == 7 or i == 14 or i == 28 or i == 56 or i == 84 or i == 168 or i == 365 or i == 730:\n",
    "    print (i)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {},
    "colab_type": "code",
    "id": "obRPaiosL9l7"
   },
   "outputs": [],
   "source": [
    "# set lag to 1, 7, 14, 28, 56, 84, 168, 365, 730\n",
    "\n",
    "def to_supervised(data,dropNa = True,lag = timeSteps):\n",
    "    df = pd.DataFrame(data)\n",
    "    column = []\n",
    "    column.append(df)\n",
    "    for i in range(1, 731):\n",
    "      if i == 1 or i == 7 or i == 14 or i == 28 or i == 56 or i == 84 or i == 168 or i == 365 or i == 730:\n",
    "        column.append(df.shift(-i))\n",
    "    df = pd.concat(column,axis=1)\n",
    "    \n",
    "    # drop rows with missing values\n",
    "    df.dropna(inplace = True)\n",
    "    \n",
    "    # specify columns for input and output pairs\n",
    "    features = data.shape[1]\n",
    "    df = df.values\n",
    "    supervised_data = df[:,:features*lag]\n",
    "    supervised_data = np.column_stack( [supervised_data, df[:,features*lag]])\n",
    "    \n",
    "    return supervised_data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 252
    },
    "colab_type": "code",
    "id": "oLO1hl3yL9mB",
    "outputId": "c48863d7-147f-43e9-d748-4ce1e265019c"
   },
   "outputs": [],
   "source": [
    "timeSteps = 9 # len(1, 7, 14, 28, 56, 84, 168, 365, 730)\n",
    "\n",
    "supervised = to_supervised(values,lag=timeSteps) # use `scaled` instead of `values` if choose to scale the data\n",
    "pd.DataFrame(supervised).head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 34
    },
    "colab_type": "code",
    "id": "wnJcWRknL9mI",
    "outputId": "c73d5804-5deb-4138-bea0-d4519a8f21b8"
   },
   "outputs": [],
   "source": [
    "# spiltting the data\n",
    "# training on first 80%'s data\n",
    "\n",
    "features = DryCreek.shape[1] # num of input features\n",
    "split_time = 7421\n",
    "# 4745\n",
    "\n",
    "X = supervised[:,:features*timeSteps] # column 1-18\n",
    "y = supervised[:,features*timeSteps] # column 19\n",
    "\n",
    "x_train = X[:split_time,:]\n",
    "x_test = X[split_time:,:]\n",
    "y_train = y[:split_time]\n",
    "y_test = y[split_time:]\n",
    "\n",
    "print (x_train.shape,x_test.shape,y_train.shape,y_test.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 34
    },
    "colab_type": "code",
    "id": "szRKphiBL9mL",
    "outputId": "475a4401-870e-49f6-b5d5-0e02d657026b"
   },
   "outputs": [],
   "source": [
    "#convert data to fit for lstm\n",
    "features = values.shape[1]\n",
    "\n",
    "x_train = x_train.reshape(x_train.shape[0], timeSteps, features)\n",
    "x_test = x_test.reshape(x_test.shape[0], timeSteps, features)\n",
    "\n",
    "print (x_train.shape,x_test.shape)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "4m2m15r2L9mN"
   },
   "source": [
    "optimizer == \"adam\" with no hidden layer"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {},
    "colab_type": "code",
    "id": "puVeqglfL9mP"
   },
   "outputs": [],
   "source": [
    "#define the model\n",
    "\n",
    "model = Sequential()\n",
    "model.add(LSTM(50,input_shape = (timeSteps,x_train.shape[2]))) # define the LSTM with 50 neurons in the first hidden layer \n",
    "model.add(Dense(1)) # 1 neuron in the output layer\n",
    "\n",
    "model.compile(loss = \"mae\", optimizer = \"adam\")\n",
    "\n",
    "history =  model.fit(x_train,y_train, validation_data = (x_test,y_test), epochs = 150 , batch_size = 32, verbose = 0, shuffle = False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {},
    "colab_type": "code",
    "id": "DtwTuANeL9mR"
   },
   "outputs": [],
   "source": [
    "y_pred = model.predict(x_test)\n",
    "y_test = y_test.reshape(len(y_test), 1)\n",
    "test_time = list(range(split_time, split_time + y_test.shape[0]))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 392
    },
    "colab_type": "code",
    "id": "B7Fu_7MyL9mU",
    "outputId": "6c71c89b-e277-47f2-dfce-d1bcba6a3f85"
   },
   "outputs": [],
   "source": [
    "plt.figure(figsize=(18, 6))\n",
    "plot_series(test_time, y_test)\n",
    "plot_series(test_time, y_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 34
    },
    "colab_type": "code",
    "id": "fFvnjVfaL9mY",
    "outputId": "fe42287d-6c72-4f81-8965-13bf80dbfc1d"
   },
   "outputs": [],
   "source": [
    "mean_absolute_error(y_test, y_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 34
    },
    "colab_type": "code",
    "id": "dA7Hke9mL9mb",
    "outputId": "02422566-7585-4ed3-ca6d-2216c2cbb56a"
   },
   "outputs": [],
   "source": [
    "mean_squared_error(y_pred,y_test)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "MGgM06wEL9mh"
   },
   "source": [
    "optimizer == \"sgd\" with no hidden layer"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {},
    "colab_type": "code",
    "id": "VHi5bk4DL9mi"
   },
   "outputs": [],
   "source": [
    "#define the model\n",
    "\n",
    "model = Sequential()\n",
    "model.add(LSTM(50,input_shape = (timeSteps,x_train.shape[2]))) # define the LSTM with 50 neurons in the first hidden layer \n",
    "model.add(Dense(1)) # 1 neuron in the output layer\n",
    "\n",
    "model.compile(loss = \"mae\", optimizer = \"sgd\")\n",
    "\n",
    "history =  model.fit(x_train,y_train, validation_data = (x_test,y_test), epochs = 150 , batch_size = 32, verbose = 0, shuffle = False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {},
    "colab_type": "code",
    "id": "amaqdKrFL9mn"
   },
   "outputs": [],
   "source": [
    "y_pred = model.predict(x_test)\n",
    "y_test = y_test.reshape(len(y_test), 1)\n",
    "test_time = list(range(split_time, split_time + y_test.shape[0]))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 392
    },
    "colab_type": "code",
    "id": "WcnLE0RxL9ms",
    "outputId": "45b49afe-4e06-4710-90bb-753ce49450ea"
   },
   "outputs": [],
   "source": [
    "plt.figure(figsize=(18, 6))\n",
    "plot_series(test_time, y_test)\n",
    "plot_series(test_time, y_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 34
    },
    "colab_type": "code",
    "id": "Yk7NAcwWL9mv",
    "outputId": "82bc2761-f259-45bd-e23a-8dae4e9f6a9a"
   },
   "outputs": [],
   "source": [
    "mean_absolute_error(y_test, y_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 34
    },
    "colab_type": "code",
    "id": "5Vf4WGLqL9m2",
    "outputId": "c1f51c8f-7a64-43af-ea0f-e0dd0b6a218e"
   },
   "outputs": [],
   "source": [
    "mean_squared_error(y_pred,y_test)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "DGcbOhIVL9m9"
   },
   "source": [
    "optimizer == \"adam\" with one hidden layer"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {},
    "colab_type": "code",
    "id": "jdShBRN6pqY0"
   },
   "outputs": [],
   "source": [
    "#define the model\n",
    "\n",
    "model = Sequential()\n",
    "model.add(LSTM(50,input_shape = (timeSteps,x_train.shape[2]))) # define the LSTM with 50 neurons in the first hidden layer \n",
    "model.add(Dense(15, activation=\"relu\"))\n",
    "model.add(Dense(1)) # 1 neuron in the output layer\n",
    "\n",
    "model.compile(loss = \"mae\", optimizer = \"adam\")\n",
    "\n",
    "history =  model.fit(x_train,y_train, validation_data = (x_test,y_test), epochs = 150 , batch_size = 32, verbose = 0, shuffle = False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {},
    "colab_type": "code",
    "id": "7C8uOTd2pqY8"
   },
   "outputs": [],
   "source": [
    "y_pred = model.predict(x_test)\n",
    "y_test = y_test.reshape(len(y_test), 1)\n",
    "test_time = list(range(split_time, split_time + y_test.shape[0]))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 392
    },
    "colab_type": "code",
    "id": "Q2JMBYA9pqY_",
    "outputId": "d109b7dd-8b0f-4969-9136-563f004952f2"
   },
   "outputs": [],
   "source": [
    "plt.figure(figsize=(18, 6))\n",
    "plot_series(test_time, y_test)\n",
    "plot_series(test_time, y_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 34
    },
    "colab_type": "code",
    "id": "9NW6GNycpqZD",
    "outputId": "7a2e06f1-6afa-4a2a-86f8-f9adabc6de34"
   },
   "outputs": [],
   "source": [
    "mean_absolute_error(y_test, y_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 34
    },
    "colab_type": "code",
    "id": "_jwwLP1HpqZI",
    "outputId": "bf727e80-13fe-4da7-df77-8a542444d8d0"
   },
   "outputs": [],
   "source": [
    "mean_squared_error(y_pred,y_test)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "hR-nr2E_lgTP"
   },
   "source": [
    "### Conclusion"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "_MPr--nblqve"
   },
   "source": [
    "Model | MAE | MSE\n",
    "------|-----|----\n",
    "univariate | 0.037099395 | 0.0051657953\n",
    "multivariate without considering lagging and previous label data | 0.0860064743914796 | 0.02289524589020403\n",
    "multivariate timeStep == 1 && optimizer == \"adam\" with no hidden layer | 0.04171416259176278 | 0.005237408316452965\n",
    "multivariate timeStep == 1 && optimizer == \"sgd\" with no hidden layer | 0.09519845136487536 | 0.017653264581316896\n",
    "multivariate timeStep == 1 && optimizer == \"adam\" with one hidden layer | 0.040812833653916455 | 0.00531610406054031\n",
    "multivariate timeStep == 2 && optimizer == \"adam\" with no hidden layer | 0.03946297969830639 | 0.005595695343139958\n",
    "multivariate timeStep == 2 && optimizer == \"sgd\" with no hidden layer | 0.11122581584895817 | 0.02617704562568444\n",
    "multivariate timeStep == 2 && optimizer == \"adam\" with one hidden layer | 0.04999110507547819 | 0.007824550134184965\n",
    "multivariate timeStep == 5 && optimizer == \"adam\" with no hidden layer | 0.05263580401718392 | 0.007496145215523297 \n",
    "multivariate timeStep == 1, 7, 14, 28, 56, 84, 168, 365, 730 && optimizer == \"adam\" with no hidden layer | 0.12102826670002562 | 0.03401812876162471\n",
    "multivariate timeStep == 1, 7, 14, 28, 56, 84, 168, 365, 730 && optimizer == \"sgd\" with no hidden layer | 0.17390957918395258 | 0.05303162846563449\n",
    "multivariate timeStep == 1, 7, 14, 28, 56, 84, 168, 365, 730 && optimizer == \"adam\" with one hidden layer | 0.13674016439218387 | 0.04337056662949345"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "glg_VfGTsadL"
   },
   "source": [
    "**Optimal Model**: univariate time-series model && multivariate timeStep == 1 with optimizer == \"adam\" and no hidden layer\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "Qr8OtFEttPH-"
   },
   "source": [
    "Control variables(layers) ???"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "Wpjeejh4AuZO"
   },
   "source": [
    "## Conclusion"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "0NO0ZNDNAw2x"
   },
   "source": []
  }
 ],
 "metadata": {
  "accelerator": "GPU",
  "colab": {
   "collapsed_sections": [
    "29IRk9evJ0yI",
    "rEQ6PNMEVWI3",
    "jdnbyB7-Leex",
    "HbczAGxpbtRs",
    "PauwCrLcXqBH",
    "92MxovgKNGC8",
    "hR-nr2E_lgTP"
   ],
   "name": "Copy of LSTM_DryCreek.ipynb",
   "provenance": [],
   "version": "0.3.2"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 1
}
